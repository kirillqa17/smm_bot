services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: smm_bot_db
    environment:
      POSTGRES_DB: smm_bot
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init_db.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis
  redis:
    image: redis:7-alpine
    container_name: smm_bot_redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Celery Worker
  celery:
    build: .
    container_name: smm_bot_celery
    command: celery -A tasks.celery_app worker --loglevel=info
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./sessions:/app/sessions

  # Telegram Bot
  bot:
    build: .
    container_name: smm_bot
    command: python bot.py
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      celery:
        condition: service_started
    volumes:
      - ./sessions:/app/sessions
    restart: unless-stopped

volumes:
  postgres_data:
